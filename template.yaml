AWSTemplateFormatVersion: "2010-09-09"

Resources:
  Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: gymlog.indianakernick.com
      Tags:
        - Key: project:gym-log
      WebsiteConfiguration:
        IndexDocument: index.html

  Table:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: UserId
          AttributeType: S
        - AttributeName: Id
          AttributeType: S
        - AttributeName: ModifiedVersion
          AttributeType: N
      BillingMode: PAY_PER_REQUEST
      KeySchema:
        - AttributeName: UserId
          KeyType: HASH
        - AttributeName: Id
          KeyType: RANGE
      LocalSecondaryIndexes:
        - IndexName: LSI-ModifiedVersion
          KeySchema:
            - AttributeName: UserId
              KeyType: HASH
            - AttributeName: ModifiedVersion
              KeyType: RANGE
          Projection:
            ProjectionType: KEYS_ONLY
      TableClass: STANDARD
      TableName: gym-log.User
      Tags:
        - Key: project:gym-log

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Description: Execution role for Lambda
      Policies:
        - PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: logs:CreateLogGroup
                Resource: arn:aws:logs:ap-southeast-2:*:*
              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:aws:logs:ap-southeast-2:*:log-group:/aws/lambda/gym-log:*"
          PolicyName: gym-log.lambda.log
        - PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:BatchGetItem
                  - dynamodb:ConditionCheckItem
                  - dynamodb:PutItem
                  - dynamodb:DeleteItem
                  - dynamodb:Scan
                  - dynamodb:Query
                  - dynamodb:UpdateItem
                  - dynamodb:DescribeTable
                  - dynamodb:GetItem
                Resource:
                  - arn:aws:dynamodb:ap-southeast-2:*:table/gym-log.User
                  - arn:aws:dynamodb:ap-southeast-2:*:table/gym-log.User/index/LSI-ModifiedVersion
          PolicyName: gym-log.lambda.dynamodb
      MaxSessionDuration: 3600
      RoleName: gym-log.lambda
      Tags:
        - Key: project:gym-log

  LambdaProxy:
    Type: AWS::Lambda::Function
    Properties:
      Architectures:
        - arm64
      Code:
        # wondering if I can run CloudFormation and then run
        # update-function-code to avoid creating another S3 bucket
        ZipFile: ""
      Environment:
        Variables:
          RUST_BACKTRACE: "1"
      FunctionName: gym-log
      Handler: bootstrap
      MemorySize: 128
      PackageType: Zip
      Role: !GetAtt LambdaExecutionRole.Arn
      Runtime: provided.al2
      Tags:
        - Key: project:gym-log
      Timeout: 3

  Api:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      FailOnWarnings: true
      Name: gym-log
      ProtocolType: HTTP
      Tags:
        - Key: project:gym-log

  ApiStageDefault:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId: !Ref Api
      AutoDeploy: true
      StageName: $default
      Tags:
        - Key: project:gym-log

  ApiRouteUserOptions:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref Api
      RouteKey: OPTIONS /user

  ApiRouteUserGet:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref Api
      AuthorizationType: JWT
      RouteKey: GET /user

  ApiIntegrationProxy:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref Api
      IntegrationType: AWS_PROXY
      IntegrationUri: !GetAtt LambdaProxy.Arn
      PayloadFormatVersion: "2.0"
      TimeoutInMillis: 30000
